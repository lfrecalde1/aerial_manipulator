% Matlab Conection %

%% CLEAN VARIABLES
clc,clear all,close all;

%% DEFINITION OF TIME VARIABLES
ts = 0.1;
tf = 100;
to = 0;
t = (to:ts:tf);

%% ROS PARAMETER FOR COMUNICATION
rosshutdown
rosinit('192.168.0.104', 'NodeHost', '192.168.0.104', 'Nodename', '/Matlab_Communication');

%% OBJECTS CREATION OF TOPICS ROS
robot = rospublisher('/DJI_Matrice600/cmd_vel');
velmsg = rosmessage(robot);
odom = rossubscriber('/DJI_Matrice/odom');

%% System Geometric Parameters
a = 0.2;

%% Genearl vector parameters
L1 = [a];

%% READ VALUES FOR INITIAL CONDITIONS
[h, hp] = odometry(odom, L);

%% VECTOR OF CONTROL VELOCITIES
u = [0.1*ones(1, length(t));...
       0*ones(1, length(t))];


for k=1:1:length(t)
    tic; 
    %% GENERAL VECTOR OF ERROR SYSTEM
    he(:, k) = hd(:,k)-h(:,k);
    
    %% GENERALIZED CONTROL LAW
    control = controller(h(:,k), hd(:,k), hdp(:,k), K1, K2, L);
    
    %% OBTAIN CONTROL VALUES OF THE VECTOR
    ul(k) = control(1);
    um(k) = control(2);
    un(k) = control(3);
    w(k) = control(4);
    
    %% SEND VALUES OF CONTROL ROBOT
    send_velocities(robot, velmsg, [ul(k), um(k), un(k), 0, 0 , w(k)]);
    
    %% GET VALUES OF DRONE
    [h(:,k+1), hp(:,k+1)] = odometry(odom, L);
    
    while(toc<ts)
    end
    toc;
end
%% SET VALUES TO ZERO ON THE DESIRED VELOCITIES
send_velocities(robot, velmsg, [0, 0, 0, 0, 0 , 0])